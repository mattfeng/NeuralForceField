"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[671],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(a),u=n,h=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return a?r.createElement(h,o(o({ref:t},p),{},{components:a})):r.createElement(h,o({ref:t},p))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9881:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const i={sidebar_position:1},o="Introduction",l={unversionedId:"intro",id:"intro",title:"Introduction",description:"The Neural Force Field (NFF) code is an API based on SchNet [1-4], DimeNet [5], PaiNN [6-7] and DANN [8]. It provides an interface to train and evaluate neural networks for force fields. It can also be used as a property predictor that uses both 3D geometries and 2D graph information [9].",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/NeuralForceField/docs/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Models",permalink:"/NeuralForceField/docs/category/models"}},s={},c=[{value:"Installation",id:"installation",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"Loading a dataset",id:"loading-a-dataset",level:3},{value:"Creating a model",id:"creating-a-model",level:3},{value:"Other important Python libraries",id:"other-important-python-libraries",level:2},{value:"Abbreviations",id:"abbreviations",level:2},{value:"References",id:"references",level:2}],p={toc:c};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"introduction"},"Introduction"),(0,n.kt)("p",null,"The Neural Force Field (NFF) code is an API based on SchNet ","[1-4]",", DimeNet ","[5]",", PaiNN ","[6-7]"," and DANN ","[8]",". It provides an interface to train and evaluate neural networks for force fields. It can also be used as a property predictor that uses both 3D geometries and 2D graph information ","[9]","."),(0,n.kt)("p",null,"This code repository is developed in the Learning Matter Lab (led by prof. Rafael Gomez-Bombarelli) at MIT."),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"conda create -n nff python=3.9\n\n# install rdkti\nconda install -c conda-forge rdkit\n# install torch; use the command given on the PyTorch website\n# for your specific platform: https://pytorch.org/get-started/locally/\nconda install -c pytorch pytorch torchvision torchaudio\n# install NeuralForceField\npip install .\n")),(0,n.kt)("h2",{id:"getting-started"},"Getting started"),(0,n.kt)("h3",{id:"loading-a-dataset"},"Loading a dataset"),(0,n.kt)("h3",{id:"creating-a-model"},"Creating a model"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},'params = {\n    "n_atom_basis": 256,\n    "n_filters": 256,\n    "n_gaussians": 32,\n    "n_convolutions": 4,\n    "cutoff": 5.0,\n    "trainable_gauss": True,\n    "dropout_rate": 0.2\n}\n\nmodel = get_model(params, model_type="SchNet")\n')),(0,n.kt)("h2",{id:"other-important-python-libraries"},"Other important Python libraries"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"ASE (",(0,n.kt)("inlineCode",{parentName:"li"},"ase"),"). The ",(0,n.kt)("a",{parentName:"li",href:"https://wiki.fysik.dtu.dk/ase/"},"Atomic Simulation Environment"),".")),(0,n.kt)("h2",{id:"abbreviations"},"Abbreviations"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"PBC.")," periodic boundary conditions")),(0,n.kt)("h2",{id:"references"},"References"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"[1]"," K.T. Sch\xfctt. F. Arbabzadah. S. Chmiela, K.-R. M\xfcller, A. Tkatchenko.",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("em",{parentName:"li"},"Quantum-chemical insights from deep tensor neural networks."),"\nNature Communications ",(0,n.kt)("strong",{parentName:"li"},"8"),". 13890 (2017)",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("a",{parentName:"li",href:"http://dx.doi.org/10.1038/ncomms13890"},"10.1038/ncomms13890")),(0,n.kt)("li",{parentName:"ul"},"[2]"," K.T. Sch\xfctt. P.-J. Kindermans, H. E. Sauceda, S. Chmiela, A. Tkatchenko, K.-R. M\xfcller.",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("em",{parentName:"li"},"SchNet: A continuous-filter convolutional neural network for modeling quantum interactions."),"\nAdvances in Neural Information Processing Systems 30, pp. 992-1002 (2017) ",(0,n.kt)("a",{parentName:"li",href:"http://papers.nips.cc/paper/6700-schnet-a-continuous-filter-convolutional-neural-network-for-modeling-quantum-interactions"},"link")),(0,n.kt)("li",{parentName:"ul"},"[3]"," K.T. Sch\xfctt. P.-J. Kindermans, H. E. Sauceda, S. Chmiela, A. Tkatchenko, K.-R. M\xfcller.",(0,n.kt)("br",{parentName:"li"}),(0,n.kt)("em",{parentName:"li"},"SchNet - a deep learning architecture for molecules and materials."),"\nThe Journal of Chemical Physics 148(24), 241722 (2018) ",(0,n.kt)("a",{parentName:"li",href:"https://doi.org/10.1063/1.5019779"},"10.1063/1.5019779")),(0,n.kt)("li",{parentName:"ul"},"[4]"," K.T. Sch\xfctt, P. Kessel, M. Gastegger, K. Nicoli, A. Tkatchenko, K.-R. M\xfcller.\n",(0,n.kt)("em",{parentName:"li"},"SchNetPack: A Deep Learning Toolbox For Atomistic Systems."),"\nJ. Chem. Theory Comput. ",(0,n.kt)("strong",{parentName:"li"},"15"),"(1), 448-455 (2019). ",(0,n.kt)("a",{parentName:"li",href:"https://doi.org/10.1021/acs.jctc.8b00908"},"10.1021/acs.jctc.8b00908")),(0,n.kt)("li",{parentName:"ul"},"[5]"," J. Klicpera, G. Janek, S. G\xfcnnemann. ",(0,n.kt)("em",{parentName:"li"},"Directional message passing for molecular graphs.")," ICLR (2020). ",(0,n.kt)("a",{parentName:"li",href:"https://openreview.net/attachment?id=B1eWbxStPH&name=original_pdf"},"URL"),"."),(0,n.kt)("li",{parentName:"ul"},"[6]"," K. T. Sch\xfctt, O. T. Unke, M. Gastegger. ",(0,n.kt)("em",{parentName:"li"},"Equivariant message passing for the prediction of tensorial properties and molecular spectra"),". arXiv preprint, 2021. ",(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/pdf/2102.03150.pdf"},"arXiv:2102.03150")),(0,n.kt)("li",{parentName:"ul"},"[7]"," S. Axelrod, E. Shakhnovich, R. G\xf3mez-Bombarelli. ",(0,n.kt)("em",{parentName:"li"},"Thermal half-lives of azobenzene derivatives: virtual screening based on intersystem crossing using a machine learning potential.")," arXiv preprint (2022). ",(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2207.11592"},"arXiv:2207.11592"),"."),(0,n.kt)("li",{parentName:"ul"},"[8]"," S. Axelrod, E. Shakhnovich, R. G\xf3mez-Bombarelli. ",(0,n.kt)("em",{parentName:"li"},"Excited state non-adiabatic dynamics of large photoswitchable molecules using a chemically transferable machine learning potential.")," Nat. Commun. ",(0,n.kt)("strong",{parentName:"li"},"13"),", 3440 (2022). ",(0,n.kt)("a",{parentName:"li",href:"https://www.nature.com/articles/s41467-022-30999-w"},"URL")),(0,n.kt)("li",{parentName:"ul"},"[9]"," S. Axelrod and R. Gomez-Bombarelli. ",(0,n.kt)("em",{parentName:"li"},"Molecular machine learning with conformer ensembles.")," arXiv preprint (2020). ",(0,n.kt)("a",{parentName:"li",href:"https://arxiv.org/abs/2012.08452?fbclid=IwAR2KlinGWeEHTR99m8x9nu2caURqIg04nQkimqzYRcTIqFq6qgv6_RgmVzo"},"arXiv:2012.08452"),"."),(0,n.kt)("li",{parentName:"ul"},"[10]"," D. Schwalbe-Koda, A.R. Tan, and R. Gomez-Bombarelli. ",(0,n.kt)("em",{parentName:"li"},"Differentiable sampling of molecular geometries with uncertainty-based adversarial attacks.")," Nat. Commun. ",(0,n.kt)("strong",{parentName:"li"},"12"),", 5104 (2021). ",(0,n.kt)("a",{parentName:"li",href:"https://doi.org/10.1038/s41467-021-25342-8"},"URL"),".")))}m.isMDXComponent=!0}}]);